{"name": "test_pwSuc[testData0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert None is not None\n +  where None = <bound method Page.findElement of <page.pageLogin.Login object at 0x03BA1CD0>>(('class name', 'bn-more'))\n +    where <bound method Page.findElement of <page.pageLogin.Login object at 0x03BA1CD0>> = <page.pageLogin.Login object at 0x03BA1CD0>.findElement", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4cc884246317cc729d9f0f111f7e095b\")>\nconf = {'baseUrl': 'http://www.douban.com', 'caseFiles': {'logout': './caseData/dataLogin/dataLogout.json', 'phInc': './caseD...'eleFiles': {'loginEle': './config/elementLoc/loginEle.yaml'}, 'logFiles': {'loginLog': './logFiles/login_log_{}.txt'}}\neleLoc = ('/', {'iframeLoc': ('xpath', \"//div[@class='login']/iframe\"), 'logoutLoc': ('link text', '退出'), 'myAccLoc': ('class name', 'bn-more'), 'passwordLoc': ('id', 'password'), ...})\ntestData = [{'password': 'huanhuan350881', 'username': '15122888806'}, {'by': 'class name', 'text': None, 'value': 'bn-more'}]\n\n    @allure.feature(\"Login module testing\")\n    @allure.story(\"Login with password successfully\")\n    @allure.severity(\"blocker\")\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\"testData\", caseData)\n    def test_pwSuc(browser, conf, eleLoc, testData):\n        baseUrl = conf[\"baseUrl\"]\n        uri, eleDict = eleLoc\n    \n        loginPage = Login(browser, baseUrl)\n        loginPage.open(uri)\n        allure.attach(baseUrl + uri, \"Request Url\")\n    \n        loginPage.switchIframe(eleDict[\"iframeLoc\"])\n        loginPage.click(eleDict[\"pwWayOfLoc\"])\n    \n        input = testData[0]\n        loginPage.typeUser(eleDict[\"usernameLoc\"], input[\"username\"])\n        loginPage.typePw(eleDict[\"passwordLoc\"], input[\"password\"])\n        allure.attach(\"username:{}, password:{}\".format(input[\"username\"], input[\"password\"]), \"Input data\")\n    \n        loginPage.click(eleDict[\"submitLoc\"])\n    \n        loginPage.switch2Default()\n        expected = testData[1]\n        allure.attach(\"Expected:Should find the element {}\".format(expected), \"Expected assertion\")\n>       assert (loginPage.findElement((expected[\"by\"], expected[\"value\"])) is not None)\nE       AssertionError: assert None is not None\nE        +  where None = <bound method Page.findElement of <page.pageLogin.Login object at 0x03BA1CD0>>(('class name', 'bn-more'))\nE        +    where <bound method Page.findElement of <page.pageLogin.Login object at 0x03BA1CD0>> = <page.pageLogin.Login object at 0x03BA1CD0>.findElement\n\ntests\\testLogin\\test_pwSuc.py:39: AssertionError"}, "attachments": [{"name": "Request Url", "source": "e48dec69-f321-4517-beed-a98a0288dd42-attachment.attach"}, {"name": "Input data", "source": "5b782acf-7b7a-4204-a533-e6c5ee1798ea-attachment.attach"}, {"name": "Expected assertion", "source": "3b6d0311-3999-46a6-9622-e06e9fc01f17-attachment.attach"}, {"name": "stdout", "source": "4131f1a3-e02f-43cd-be4e-13f5e2db502f-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "testData", "value": "[{'username': '15122888806', 'password': 'huanhuan350881'}, {'by': 'class name', 'value': 'bn-more', 'text': None}]"}], "start": 1586405365061, "stop": 1586405388870, "uuid": "70f6820f-4f17-403b-a15b-348de316a5f7", "historyId": "938c89ef71398a029323e10553cb8361", "testCaseId": "a167912d8f73abb37fb9926f57614574", "fullName": "tests.testLogin.test_pwSuc#test_pwSuc", "labels": [{"name": "story", "value": "Login with password successfully"}, {"name": "feature", "value": "Login module testing"}, {"name": "severity", "value": "blocker"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests.testLogin"}, {"name": "suite", "value": "test_pwSuc"}, {"name": "host", "value": "DESKTOP-KAVVNMT"}, {"name": "thread", "value": "19616-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.testLogin.test_pwSuc"}]}